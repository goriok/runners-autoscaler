apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: runner-oauth-credentials-<%runnerUuid%>
      labels:
        accountUuid: <%accountUuid%>
    {%- if repositoryUuid %}
        repositoryUuid: <%repositoryUuid%>
    {%- endif %}
        runnerUuid: <%runnerUuid%>
        runnerNamespace: <%runnerNamespace%>
    data:
      oauthClientId: <%oauthClientId_base64%>
      oauthClientSecret: <%oauthClientSecret_base64%>
  - apiVersion: batch/v1
    kind: Job
    metadata:
      name: runner-<%runnerUuid%>
    spec:
      template:
        metadata:
          labels:
            accountUuid: <%accountUuid%>
            runnerUuid: <%runnerUuid%>
        {%- if repositoryUuid %}
            repositoryUuid: <%repositoryUuid%>
        {%- endif %}
            runnerNamespace: <%runnerNamespace%>
        spec:
          containers:
            - name: bitbucket-k8s-runner
              image: docker-public.packages.atlassian.com/sox/atlassian/bitbucket-pipelines-runner
              env:
                - name: ACCOUNT_UUID
                  value: "{<%accountUuid%>}"
            {%- if repositoryUuid %}
                - name: REPOSITORY_UUID
                  value: "{<%repositoryUuid%>}"
            {%- endif %}
                - name: RUNNER_UUID
                  value: "{<%runnerUuid%>}"
                - name: OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: runner-oauth-credentials-<%runnerUuid%>
                      key: oauthClientId
                - name: OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: runner-oauth-credentials-<%runnerUuid%>
                      key: oauthClientSecret
                - name: WORKING_DIRECTORY
                  value: "/tmp"
              volumeMounts:
                - name: tmp
                  mountPath: /tmp
                - name: docker-containers
                  mountPath: /var/lib/docker/containers
                  readOnly: true
                - name: var-run
                  mountPath: /var/run
            - name: docker-in-docker
              image: docker:dind
              securityContext:
                privileged: true
              volumeMounts:
                - name: tmp
                  mountPath: /tmp
                - name: docker-containers
                  mountPath: /var/lib/docker/containers
                - name: var-run
                  mountPath: /var/run
          restartPolicy: OnFailure
          volumes:
            - name: tmp
            - name: docker-containers
            - name: var-run
      backoffLimit: 6
      completions: 1
      parallelism: 1