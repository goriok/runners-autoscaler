apiVersion: v1
kind: ConfigMap
metadata:
  name: runners-autoscaler-config
  namespace: bitbucket-runner-control-plane
data:
  runners_config.yaml: |
    constants:
      default_sleep_time_runner_setup: 10
      default_sleep_time_runner_delete: 5
      runner_api_polling_interval: 600
      runner_cool_down_period: 300
    groups:
      - name: "Runner group 1"
        workspace: "<workspace>"
        repository: "<repository>"
        labels:
          - "<label>"
          - "<another.label>"
        namespace: "<k8s namespace>"
        strategy: "percentageRunnersIdle"
        # Set up the parameters for runners to create/delete via Bitbucket API.
        parameters:
          min: 1  # recommended minimum 1 must be in UI because fails, when new build is starting.
          max: 10  #
          scale_up_threshold: 0.5  # The percentage of busy runners at which the number of desired runners are re-evaluated to scale up.
          scale_down_threshold: 0.2  # The percentage of busy runners at which the number of desired runners are re-evaluated to scale up.
          scale_up_multiplier: 1.5  #  scale_up_multiplier > 1.
          scale_down_multiplier: 0.5  #  0 < scale_down_multiplier < 1.
        # Set up the resources for kubernetes job template.
        # This section is optional. If not provided the default values for memory "4Gi" and cpu "1000m" in requests and limits will be used
        resources:  # Autoscaler kubernetes job template resources available for tuning.
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      - name: "Runner group 2"
        workspace: "<workspace>"
        repository: "<repository>"
        labels:
          - "<label2>"
          - "<another.label2>"
        namespace: "<k8s namespace>"
        strategy: "percentageRunnersIdle"
        # Set up the parameters for runners to create/delete via Bitbucket API.
        parameters:
          min: 1  # recommended minimum 1 must be in UI because fails, when new build is starting.
          max: 10  #
          scale_up_threshold: 0.5  # The percentage of busy runners at which the number of desired runners are re-evaluated to scale up.
          scale_down_threshold: 0.2  # The percentage of busy runners at which the number of desired runners are re-evaluated to scale up.
          scale_up_multiplier: 1.5  #  scale_up_multiplier > 1.
          scale_down_multiplier: 0.5  #  0 < scale_down_multiplier < 1.